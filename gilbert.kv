#:kivy 1.11.1

<MenuScreen@Screen>
    # Set background color for main menu.
    canvas.before:
        Color:
            rgba: (0.2, 0.2, 0.4, 1)
        Rectangle:
            size: self.size
            pos: self.pos
    # Main menu logo.
    BoxLayout:
        size_hint: (1, 0.2)
        pos_hint: {'top': 1, 'center_x': 0.5}
        orientation: "vertical"
        Label:
            text: "Gilbert"
            font_size: "20sp"
        Image:
            source: "assets/icons/icons8-magnet-80.png"
    # Box layout for menu buttons.
    BoxLayout:
        id: menu_screen_layout
        # Spacing between children, in pixels.
        spacing: 10
        # Padding between layout box and children.
        padding: 10
        orientation: "vertical"
        size_hint: (0.9, 0.8)
        pos_hint: {'top': 0.8, 'bottom': 0, 'center_x': 0.5}
        MenuScreenButton:
            text: "Estudio"
            icon: 'assets/icons/icons8-book-shelf-64.png'
            on_press:
                # You can define the duration of the change
                # and the direction of the slide
                root.manager.transition.direction = 'left'
                root.manager.transition.duration = .3
                root.manager.previous = 'menu_screen'
                root.manager.current = 'study_screen'
        MenuScreenButton:
            text: "Cuestionario"
            icon: "assets/icons/icons8-test-100.png"
            on_press:
                # You can define the duration of the change
                # and the direction of the slide
                root.manager.transition.direction = 'left'
                root.manager.transition.duration = .3
                root.manager.previous = 'menu_screen'
                root.manager.current = 'quiz_screen'
        MenuScreenButton:
            text: "Simulador Ω"
            icon: "assets/icons/icons8-voltmeter-100.png"
            on_press:
                # You can define the duration of the change
                # and the direction of the slide
                root.manager.transition.direction = 'left'
                root.manager.transition.duration = .3
                root.manager.previous = 'menu_screen'
                root.manager.current = 'ohm_screen'
        MenuScreenButton:
            text: "Acerca de..."
            icon: "assets/icons/icons8-octocat-100.png"
            on_press:
                # You can define the duration of the change
                # and the direction of the slide
                root.manager.transition.direction = 'left'
                root.manager.transition.duration = .3
                root.manager.previous = 'menu_screen'
                root.manager.current = 'about_screen'
        #SettingsButton

<QuestionLabel@Label>:
    # Make the text of the question wrap if it does not
    # fit the label rectangle.
    text_size: self.width, None
    size_hint: 0.5, 0.2
    height: self.texture_size[1]

<QuizScreen@Screen>:
    # Set background color for the quiz screen.
    canvas.before:
        Color:
            rgba: (0.2, 0.2, 0.4, 1)
        Rectangle:
            size: self.size
            pos: self.pos

<AboutScreen@Screen>:
    BoxLayout:
        orientation: "vertical"
        RstDocument:
            source: "assets/chapters/about.rst"

<StudyScreen@Screen>
    # Set background color for the study screen.
    canvas.before:
        Color:
            rgba: (0.2, 0.2, 0.4, 1)
        Rectangle:
            size: self.size
            pos: self.pos


<OhmScreen@Screen>
    # Set background color for the Ohm simulator.
    canvas.before:
        Color:
            rgba: (0.2, 0.2, 0.4, 1)
        Rectangle:
            size: self.size
            pos: self.pos

<MenuScreenButton@Button>
    id: menu_screen_button
    # Make the button "invisible", since we are going to manipulate its canvas.
    background_color: (0, 0, 0, 0)
    background_normal: ""
    # Custom properties.
    # Purle color: in (0...255)=103, 57.8, 183
    back_color: 0.404, 0.227, 0.718, 1.0
    border_radius: [18]
    icon: self.icon
    # Manipulate the canvas.
    canvas.before:
        Color:
            rgba: self.back_color
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: self.border_radius
    canvas:
        # Inside this rectangle, we will place the icon.
        Rectangle:
            # We want the icons to be squares, so we use the button's height for both X and Y.
            size: self.height * 0.5, self.height * 0.5
            pos: self.pos[0] + (self.height * 0.5), self.pos[1] + (self.height / 4)
            source: self.icon

<PurpleRoundedButton@Button>
    # This custom button is very similar to "MenuScreenButton"
    # but it does not have any icons
    id: purple_rounded_button
    # Make the button "invisible", since we are going to manipulate its canvas.
    background_color: (0, 0, 0, 0)
    background_normal: ""
    # Make the text of the label wrap if it does not
    # fit the label rectangle.
    halign: "center"
    valign: "middle"
    text_size: self.width, None
    height: self.texture_size[1]
    # Custom properties.
    back_color: 0.404, 0.227, 0.718, 1.0
    border_radius: [18]
    icon: self.icon
    # Manipulate the canvas.
    canvas.before:
        Color:
            rgba: self.back_color
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: self.border_radius


<InstructionsButton@PurpleRoundedButton>
    # A custom button that explains usage.
    size: ("50sp", "50sp")
    size_hint: (None, None)
    # Add a "question mark" icon at the center.
    icon: "assets/icons/icons8-question-mark-80.png"
    canvas:
        # Inside this rectangle, we will place the icon.
        Rectangle:
            # We want the icons to be squares, so we use the button's height for both X and Y.
            size: self.height * 0.5, self.height * 0.5
            pos: (self.pos[0] + (self.height / 2) - ((self.height * 0.5) / 2)), (self.pos[1] + (self.height / 2) - ((self.height * 0.5) / 2))
            source: self.icon

<SettingsButton@PurpleRoundedButton>
    font_size: self.font_size
    on_release: app.open_settings()
    id: settings_button_boxlayout
    icon: "assets/icons/icons8-job-64.png"
    text: "Configuración"

<BackToMenuButton@MenuScreenButton>
    font_size: self.font_size
    on_press:
        app.screen_manager.transition.direction = 'right'
        app.screen_manager.transition.duration = .3
        app.screen_manager.current = 'menu_screen'
    icon: "assets/icons/ic_home_white_48dp.png"
    text: "Regresar"

<ResetButton@PurpleRoundedButton>
    font_size: self.font_size
    text: "Reset"

<StudyInstructionsPopup@Popup>
    title: 'Instrucciones - Sección de estudio'
    title_align: "center"
    separator_color: (0.404, 0.227, 0.718, 1.0)
    auto_dismiss: True
    size_hint: 0.5, 0.5
    Label:
        text: "Selecciona una lección presionando el botón de la esquina superior izquierda.\n\nEn la parte derecha se mostrará el texto de la lección."
        # Make the text of the label wrap if it does not
        # fit the label rectangle.
        halign: "center"
        valign: "middle"
        text_size: self.width, None
        height: self.texture_size[1]

<QuizInstructionsPopup@Popup>
    title: "Instrucciones - Cuestionario"
    title_align: "center"
    separator_color: (0.404, 0.227, 0.718, 1.0)
    auto_dismiss: True
    size_hint: 0.5, 0.5
    Label:
        markup: True
        text: "Selecciona la respuesta correcta presionando en el botón correspondiente.\n\nEn la parte derecha se muestran contadores de respuestas correctas e incorrectas. El botón [b]Reset[/b] los reinicia."
        # Make the text of the label wrap if it does not
        # fit the label rectangle.
        halign: "center"
        valign: "middle"
        text_size: self.width, None
        height: self.texture_size[1]

<OhmInstructionsPopup@Popup>
    title: 'Instrucciones - Simulador Ohm'
    title_align: "center"
    separator_color: (0.404, 0.227, 0.718, 1.0)
    auto_dismiss: True
    size_hint: 0.5, 0.5
    Label:
        markup: True
        text: "Selecciona [b]I[/b], [b]V[/b] o [b]R[/b] en el triángulo de la Ley de Ohm para calcular ese valor.\n\nMueve dos sliders para ver cómo ese valor es calculado en el tercero.\n\n"
        # Make the text of the label wrap if it does not
        # fit the label rectangle.
        halign: "center"
        valign: "middle"
        text_size: self.width, None
        height: self.texture_size[1]
